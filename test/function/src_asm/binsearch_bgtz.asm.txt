lw $a0, 0($zero)            # 00 Search item: a0
lw $s0, 4($zero)            # 04 Array start: s0
lw $s1, 8($zero)            # 08 Array end: s1
lw $s3, 4($zero)            # 0C Search start: s3; Midpoint s2
nop                         # 10
beq $s3, $s1, 15            # 14 SEARCH Item was not found, jump to END
nop
subu $s2, $s1, $s3          # 18 mid<=(end-start)
# addiu $v0, $s2, 0
sra $s2, $s2, 3             # 1C floor division by 2+memory offsets
sll $s2, $s2, 2             # 20 floor division by 2+memory offsets
# addiu $v0, $s2, 0 
addu $s2, $s2, $s3          # 24 arr index of mid
# addiu $v0, $s2, 0
# jr $zero
lw $t0, 0($s2)              # 28 t0<=arr[mid]
nop                         # 2C t1<=arr[mid]-searchitem
# addiu $v0, $t0, 0
# jr $zero
subu $t1, $t0, $a0          # 30
# addiu $v0, $t1, 0   # what is in the comparative reg
beq $t1, $zero, 9           # 34 Item was found, jump to FOUND
nop                         # 38
bltz $t1, 9                 # 3C jump to LESSTHAN
nop                         # 40
bgtz $t1, 9                 # 44 jump to MORETHAN
nop                         # 48
j 0xFD00000                 # 4C Should never come here so exit on error
nop                         # 50
jr $zero                    # 54 END
addiu $v0, $v0, -1          # 58 didn't find the item, return -1
jr $zero                    # 5C FOUND
subu $v0, $s2, $s0          # 60 found the item, return index
j 0xFC00014                 # 64 LESSTHAN (arr[mid] < searchitem), jump to SEARCH
addiu $s3, $s2, 4           # 68 search between (mid+1):end
j 0xFC00014                 # 6C MORETHAN (arr[mid] > searchitem), jump to SEARCH
addiu $s1, $s2, 0           # 70 search between start:mid

comment: Binary Search on a sorted array